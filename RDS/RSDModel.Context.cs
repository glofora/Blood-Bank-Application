//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RDS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RDSEntities : DbContext
    {
        public RDSEntities()
            : base("name=RDSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Area> Areas { get; set; }
        public DbSet<BloodGroup> BloodGroups { get; set; }
        public DbSet<Donor> Donors { get; set; }
        public DbSet<History> Histories { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual int CreateArea(string area)
        {
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateArea", areaParameter);
        }
    
        public virtual int CreateDonor(Nullable<int> id, string name, string secondName, Nullable<int> age, string gender, Nullable<int> bloodGroup, string address, string phone, Nullable<int> area)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("SecondName", secondName) :
                new ObjectParameter("SecondName", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var bloodGroupParameter = bloodGroup.HasValue ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateDonor", idParameter, nameParameter, secondNameParameter, ageParameter, genderParameter, bloodGroupParameter, addressParameter, phoneParameter, areaParameter);
        }
    
        public virtual int DeleteArea(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteArea", nameParameter);
        }
    
        public virtual int Deletedonor(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deletedonor", idParameter);
        }
    
        public virtual ObjectResult<GetallArea_Result> GetallArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetallArea_Result>("GetallArea");
        }
    
        public virtual ObjectResult<GetAllDonatedHistories_Result> GetAllDonatedHistories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDonatedHistories_Result>("GetAllDonatedHistories");
        }
    
        public virtual ObjectResult<getallDonor_Result> getallDonor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getallDonor_Result>("getallDonor");
        }
    
        public virtual int SetDonatedhistory(Nullable<int> member)
        {
            var memberParameter = member.HasValue ?
                new ObjectParameter("Member", member) :
                new ObjectParameter("Member", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetDonatedhistory", memberParameter);
        }
    }
}
